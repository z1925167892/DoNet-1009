//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace WCF.ServiceReference2 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference2.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/PlusNumber", ReplyAction="http://tempuri.org/IService1/PlusNumberResponse")]
        double PlusNumber(double num1, double num2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/PlusNumber", ReplyAction="http://tempuri.org/IService1/PlusNumberResponse")]
        System.Threading.Tasks.Task<double> PlusNumberAsync(double num1, double num2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/JianName", ReplyAction="http://tempuri.org/IService1/JianNameResponse")]
        double JianName(double num1, double num2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/JianName", ReplyAction="http://tempuri.org/IService1/JianNameResponse")]
        System.Threading.Tasks.Task<double> JianNameAsync(double num1, double num2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ChengNumber", ReplyAction="http://tempuri.org/IService1/ChengNumberResponse")]
        double ChengNumber(double num1, double num2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ChengNumber", ReplyAction="http://tempuri.org/IService1/ChengNumberResponse")]
        System.Threading.Tasks.Task<double> ChengNumberAsync(double num1, double num2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ChuNumber", ReplyAction="http://tempuri.org/IService1/ChuNumberResponse")]
        double ChuNumber(double num1, double num2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ChuNumber", ReplyAction="http://tempuri.org/IService1/ChuNumberResponse")]
        System.Threading.Tasks.Task<double> ChuNumberAsync(double num1, double num2);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : WCF.ServiceReference2.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<WCF.ServiceReference2.IService1>, WCF.ServiceReference2.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public double PlusNumber(double num1, double num2) {
            return base.Channel.PlusNumber(num1, num2);
        }
        
        public System.Threading.Tasks.Task<double> PlusNumberAsync(double num1, double num2) {
            return base.Channel.PlusNumberAsync(num1, num2);
        }
        
        public double JianName(double num1, double num2) {
            return base.Channel.JianName(num1, num2);
        }
        
        public System.Threading.Tasks.Task<double> JianNameAsync(double num1, double num2) {
            return base.Channel.JianNameAsync(num1, num2);
        }
        
        public double ChengNumber(double num1, double num2) {
            return base.Channel.ChengNumber(num1, num2);
        }
        
        public System.Threading.Tasks.Task<double> ChengNumberAsync(double num1, double num2) {
            return base.Channel.ChengNumberAsync(num1, num2);
        }
        
        public double ChuNumber(double num1, double num2) {
            return base.Channel.ChuNumber(num1, num2);
        }
        
        public System.Threading.Tasks.Task<double> ChuNumberAsync(double num1, double num2) {
            return base.Channel.ChuNumberAsync(num1, num2);
        }
    }
}
